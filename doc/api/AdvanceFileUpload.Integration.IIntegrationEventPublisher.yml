### YamlMime:ManagedReference
items:
- uid: AdvanceFileUpload.Integration.IIntegrationEventPublisher
  commentId: T:AdvanceFileUpload.Integration.IIntegrationEventPublisher
  id: IIntegrationEventPublisher
  parent: AdvanceFileUpload.Integration
  children:
  - AdvanceFileUpload.Integration.IIntegrationEventPublisher.PublishAsync``1(AdvanceFileUpload.Integration.PublishMessage{``0},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IIntegrationEventPublisher
  nameWithType: IIntegrationEventPublisher
  fullName: AdvanceFileUpload.Integration.IIntegrationEventPublisher
  type: Interface
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Integration.Contracts/IIntegrationEventPublisher.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: IIntegrationEventPublisher
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Integration.Contracts/IIntegrationEventPublisher.cs
    startLine: 6
  assemblies:
  - AdvanceFileUpload.Integration
  namespace: AdvanceFileUpload.Integration
  summary: Defines a contract for publishing integration events to a message broker or event bus.
  example: []
  syntax:
    content: 'public interface IIntegrationEventPublisher : IAsyncDisposable, IDisposable'
    content.vb: Public Interface IIntegrationEventPublisher Inherits IAsyncDisposable, IDisposable
  inheritedMembers:
  - System.IAsyncDisposable.DisposeAsync
  - System.IDisposable.Dispose
- uid: AdvanceFileUpload.Integration.IIntegrationEventPublisher.PublishAsync``1(AdvanceFileUpload.Integration.PublishMessage{``0},System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Integration.IIntegrationEventPublisher.PublishAsync``1(AdvanceFileUpload.Integration.PublishMessage{``0},System.Threading.CancellationToken)
  id: PublishAsync``1(AdvanceFileUpload.Integration.PublishMessage{``0},System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Integration.IIntegrationEventPublisher
  langs:
  - csharp
  - vb
  name: PublishAsync<T>(PublishMessage<T>, CancellationToken)
  nameWithType: IIntegrationEventPublisher.PublishAsync<T>(PublishMessage<T>, CancellationToken)
  fullName: AdvanceFileUpload.Integration.IIntegrationEventPublisher.PublishAsync<T>(AdvanceFileUpload.Integration.PublishMessage<T>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Integration.Contracts/IIntegrationEventPublisher.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: PublishAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Integration.Contracts/IIntegrationEventPublisher.cs
    startLine: 15
  assemblies:
  - AdvanceFileUpload.Integration
  namespace: AdvanceFileUpload.Integration
  summary: Publishes an integration event message asynchronously.
  example: []
  syntax:
    content: 'Task PublishAsync<T>(PublishMessage<T> message, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: message
      type: AdvanceFileUpload.Integration.PublishMessage{{T}}
      description: The message to be published, including metadata such as queue, exchange, and routing details.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to monitor for cancellation requests.
    typeParameters:
    - id: T
      description: The type of the message payload.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous publish operation.
    content.vb: Function PublishAsync(Of T As Class)(message As PublishMessage(Of T), cancellationToken As CancellationToken = Nothing) As Task
  overload: AdvanceFileUpload.Integration.IIntegrationEventPublisher.PublishAsync*
  nameWithType.vb: IIntegrationEventPublisher.PublishAsync(Of T)(PublishMessage(Of T), CancellationToken)
  fullName.vb: AdvanceFileUpload.Integration.IIntegrationEventPublisher.PublishAsync(Of T)(AdvanceFileUpload.Integration.PublishMessage(Of T), System.Threading.CancellationToken)
  name.vb: PublishAsync(Of T)(PublishMessage(Of T), CancellationToken)
references:
- uid: AdvanceFileUpload.Integration
  commentId: N:AdvanceFileUpload.Integration
  href: AdvanceFileUpload.html
  name: AdvanceFileUpload.Integration
  nameWithType: AdvanceFileUpload.Integration
  fullName: AdvanceFileUpload.Integration
  spec.csharp:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Integration
    name: Integration
    href: AdvanceFileUpload.Integration.html
  spec.vb:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Integration
    name: Integration
    href: AdvanceFileUpload.Integration.html
- uid: System.IAsyncDisposable.DisposeAsync
  commentId: M:System.IAsyncDisposable.DisposeAsync
  parent: System.IAsyncDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  name: DisposeAsync()
  nameWithType: IAsyncDisposable.DisposeAsync()
  fullName: System.IAsyncDisposable.DisposeAsync()
  spec.csharp:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  - name: (
  - name: )
  spec.vb:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  - name: (
  - name: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AdvanceFileUpload.Integration.IIntegrationEventPublisher.PublishAsync*
  commentId: Overload:AdvanceFileUpload.Integration.IIntegrationEventPublisher.PublishAsync
  href: AdvanceFileUpload.Integration.IIntegrationEventPublisher.html#AdvanceFileUpload_Integration_IIntegrationEventPublisher_PublishAsync__1_AdvanceFileUpload_Integration_PublishMessage___0__System_Threading_CancellationToken_
  name: PublishAsync
  nameWithType: IIntegrationEventPublisher.PublishAsync
  fullName: AdvanceFileUpload.Integration.IIntegrationEventPublisher.PublishAsync
- uid: AdvanceFileUpload.Integration.PublishMessage{{T}}
  commentId: T:AdvanceFileUpload.Integration.PublishMessage{``0}
  parent: AdvanceFileUpload.Integration
  definition: AdvanceFileUpload.Integration.PublishMessage`1
  href: AdvanceFileUpload.Integration.PublishMessage-1.html
  name: PublishMessage<T>
  nameWithType: PublishMessage<T>
  fullName: AdvanceFileUpload.Integration.PublishMessage<T>
  nameWithType.vb: PublishMessage(Of T)
  fullName.vb: AdvanceFileUpload.Integration.PublishMessage(Of T)
  name.vb: PublishMessage(Of T)
  spec.csharp:
  - uid: AdvanceFileUpload.Integration.PublishMessage`1
    name: PublishMessage
    href: AdvanceFileUpload.Integration.PublishMessage-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AdvanceFileUpload.Integration.PublishMessage`1
    name: PublishMessage
    href: AdvanceFileUpload.Integration.PublishMessage-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: AdvanceFileUpload.Integration.PublishMessage`1
  commentId: T:AdvanceFileUpload.Integration.PublishMessage`1
  href: AdvanceFileUpload.Integration.PublishMessage-1.html
  name: PublishMessage<T>
  nameWithType: PublishMessage<T>
  fullName: AdvanceFileUpload.Integration.PublishMessage<T>
  nameWithType.vb: PublishMessage(Of T)
  fullName.vb: AdvanceFileUpload.Integration.PublishMessage(Of T)
  name.vb: PublishMessage(Of T)
  spec.csharp:
  - uid: AdvanceFileUpload.Integration.PublishMessage`1
    name: PublishMessage
    href: AdvanceFileUpload.Integration.PublishMessage-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AdvanceFileUpload.Integration.PublishMessage`1
    name: PublishMessage
    href: AdvanceFileUpload.Integration.PublishMessage-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
