### YamlMime:ManagedReference
items:
- uid: AdvanceFileUpload.Application.IUploadManger
  commentId: T:AdvanceFileUpload.Application.IUploadManger
  id: IUploadManger
  parent: AdvanceFileUpload.Application
  children:
  - AdvanceFileUpload.Application.IUploadManger.CancelUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  - AdvanceFileUpload.Application.IUploadManger.CompleteUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  - AdvanceFileUpload.Application.IUploadManger.CreateUploadSessionAsync(AdvanceFileUpload.Application.Shared.CreateUploadSessionRequest,System.Threading.CancellationToken)
  - AdvanceFileUpload.Application.IUploadManger.GetUploadSessionStatusAsync(System.Guid,System.Threading.CancellationToken)
  - AdvanceFileUpload.Application.IUploadManger.PauseUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  - AdvanceFileUpload.Application.IUploadManger.UploadChunkAsync(AdvanceFileUpload.Application.Shared.UploadChunkRequest,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IUploadManger
  nameWithType: IUploadManger
  fullName: AdvanceFileUpload.Application.IUploadManger
  type: Interface
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: IUploadManger
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
    startLine: 12
  assemblies:
  - AdvanceFileUpload.Application
  namespace: AdvanceFileUpload.Application
  summary: Interface for managing file upload sessions.
  example: []
  syntax:
    content: public interface IUploadManger
    content.vb: Public Interface IUploadManger
- uid: AdvanceFileUpload.Application.IUploadManger.CreateUploadSessionAsync(AdvanceFileUpload.Application.Shared.CreateUploadSessionRequest,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Application.IUploadManger.CreateUploadSessionAsync(AdvanceFileUpload.Application.Shared.CreateUploadSessionRequest,System.Threading.CancellationToken)
  id: CreateUploadSessionAsync(AdvanceFileUpload.Application.Shared.CreateUploadSessionRequest,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Application.IUploadManger
  langs:
  - csharp
  - vb
  name: CreateUploadSessionAsync(CreateUploadSessionRequest, CancellationToken)
  nameWithType: IUploadManger.CreateUploadSessionAsync(CreateUploadSessionRequest, CancellationToken)
  fullName: AdvanceFileUpload.Application.IUploadManger.CreateUploadSessionAsync(AdvanceFileUpload.Application.Shared.CreateUploadSessionRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: CreateUploadSessionAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
    startLine: 20
  assemblies:
  - AdvanceFileUpload.Application
  namespace: AdvanceFileUpload.Application
  summary: Creates a new file upload session asynchronously.
  example: []
  syntax:
    content: Task<CreateUploadSessionResponse> CreateUploadSessionAsync(CreateUploadSessionRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: AdvanceFileUpload.Application.Shared.CreateUploadSessionRequest
      description: The request containing the details of the file to be uploaded.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{AdvanceFileUpload.Application.Shared.CreateUploadSessionResponse}
      description: A task that represents the asynchronous operation. The task result contains the response with the details of the created upload session.
    content.vb: Function CreateUploadSessionAsync(request As CreateUploadSessionRequest, cancellationToken As CancellationToken = Nothing) As Task(Of CreateUploadSessionResponse)
  overload: AdvanceFileUpload.Application.IUploadManger.CreateUploadSessionAsync*
- uid: AdvanceFileUpload.Application.IUploadManger.CompleteUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Application.IUploadManger.CompleteUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  id: CompleteUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Application.IUploadManger
  langs:
  - csharp
  - vb
  name: CompleteUploadSessionAsync(Guid, CancellationToken)
  nameWithType: IUploadManger.CompleteUploadSessionAsync(Guid, CancellationToken)
  fullName: AdvanceFileUpload.Application.IUploadManger.CompleteUploadSessionAsync(System.Guid, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: CompleteUploadSessionAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
    startLine: 28
  assemblies:
  - AdvanceFileUpload.Application
  namespace: AdvanceFileUpload.Application
  summary: Completes the file upload session asynchronously.
  example: []
  syntax:
    content: Task<bool> CompleteUploadSessionAsync(Guid sessionId, CancellationToken cancellationToken = default)
    parameters:
    - id: sessionId
      type: System.Guid
      description: The unique identifier of the upload session.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation. The task result indicates whether the File was Uploading Completed successfully.
    content.vb: Function CompleteUploadSessionAsync(sessionId As Guid, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: AdvanceFileUpload.Application.IUploadManger.CompleteUploadSessionAsync*
- uid: AdvanceFileUpload.Application.IUploadManger.UploadChunkAsync(AdvanceFileUpload.Application.Shared.UploadChunkRequest,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Application.IUploadManger.UploadChunkAsync(AdvanceFileUpload.Application.Shared.UploadChunkRequest,System.Threading.CancellationToken)
  id: UploadChunkAsync(AdvanceFileUpload.Application.Shared.UploadChunkRequest,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Application.IUploadManger
  langs:
  - csharp
  - vb
  name: UploadChunkAsync(UploadChunkRequest, CancellationToken)
  nameWithType: IUploadManger.UploadChunkAsync(UploadChunkRequest, CancellationToken)
  fullName: AdvanceFileUpload.Application.IUploadManger.UploadChunkAsync(AdvanceFileUpload.Application.Shared.UploadChunkRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: UploadChunkAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
    startLine: 36
  assemblies:
  - AdvanceFileUpload.Application
  namespace: AdvanceFileUpload.Application
  summary: Uploads a chunk of the file asynchronously.
  example: []
  syntax:
    content: Task<bool> UploadChunkAsync(UploadChunkRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: AdvanceFileUpload.Application.Shared.UploadChunkRequest
      description: The request containing the details of the chunk to be uploaded.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation. The task result indicates whether the chunk was uploaded successfully.
    content.vb: Function UploadChunkAsync(request As UploadChunkRequest, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: AdvanceFileUpload.Application.IUploadManger.UploadChunkAsync*
- uid: AdvanceFileUpload.Application.IUploadManger.GetUploadSessionStatusAsync(System.Guid,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Application.IUploadManger.GetUploadSessionStatusAsync(System.Guid,System.Threading.CancellationToken)
  id: GetUploadSessionStatusAsync(System.Guid,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Application.IUploadManger
  langs:
  - csharp
  - vb
  name: GetUploadSessionStatusAsync(Guid, CancellationToken)
  nameWithType: IUploadManger.GetUploadSessionStatusAsync(Guid, CancellationToken)
  fullName: AdvanceFileUpload.Application.IUploadManger.GetUploadSessionStatusAsync(System.Guid, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: GetUploadSessionStatusAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
    startLine: 44
  assemblies:
  - AdvanceFileUpload.Application
  namespace: AdvanceFileUpload.Application
  summary: Gets the status of the upload session asynchronously.
  example: []
  syntax:
    content: Task<UploadSessionStatusResponse?> GetUploadSessionStatusAsync(Guid sessionId, CancellationToken cancellationToken = default)
    parameters:
    - id: sessionId
      type: System.Guid
      description: The unique identifier of the upload session.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{AdvanceFileUpload.Application.Shared.UploadSessionStatusResponse}
      description: A task that represents the asynchronous operation. The task result contains the response with the status of the upload session.
    content.vb: Function GetUploadSessionStatusAsync(sessionId As Guid, cancellationToken As CancellationToken = Nothing) As Task(Of UploadSessionStatusResponse)
  overload: AdvanceFileUpload.Application.IUploadManger.GetUploadSessionStatusAsync*
- uid: AdvanceFileUpload.Application.IUploadManger.CancelUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Application.IUploadManger.CancelUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  id: CancelUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Application.IUploadManger
  langs:
  - csharp
  - vb
  name: CancelUploadSessionAsync(Guid, CancellationToken)
  nameWithType: IUploadManger.CancelUploadSessionAsync(Guid, CancellationToken)
  fullName: AdvanceFileUpload.Application.IUploadManger.CancelUploadSessionAsync(System.Guid, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: CancelUploadSessionAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
    startLine: 52
  assemblies:
  - AdvanceFileUpload.Application
  namespace: AdvanceFileUpload.Application
  summary: Cancels the file upload session asynchronously.
  example: []
  syntax:
    content: Task<bool> CancelUploadSessionAsync(Guid sessionId, CancellationToken cancellationToken = default)
    parameters:
    - id: sessionId
      type: System.Guid
      description: The unique identifier of the upload session.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation. The task result indicates whether the session was canceled successfully.
    content.vb: Function CancelUploadSessionAsync(sessionId As Guid, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: AdvanceFileUpload.Application.IUploadManger.CancelUploadSessionAsync*
- uid: AdvanceFileUpload.Application.IUploadManger.PauseUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Application.IUploadManger.PauseUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  id: PauseUploadSessionAsync(System.Guid,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Application.IUploadManger
  langs:
  - csharp
  - vb
  name: PauseUploadSessionAsync(Guid, CancellationToken)
  nameWithType: IUploadManger.PauseUploadSessionAsync(Guid, CancellationToken)
  fullName: AdvanceFileUpload.Application.IUploadManger.PauseUploadSessionAsync(System.Guid, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: PauseUploadSessionAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application/IUploadManger.cs
    startLine: 60
  assemblies:
  - AdvanceFileUpload.Application
  namespace: AdvanceFileUpload.Application
  summary: pause the file upload session asynchronously.
  example: []
  syntax:
    content: Task<bool> PauseUploadSessionAsync(Guid sessionId, CancellationToken cancellationToken = default)
    parameters:
    - id: sessionId
      type: System.Guid
      description: The unique identifier of the upload session.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation. The task result indicates whether the session was paused successfully.
    content.vb: Function PauseUploadSessionAsync(sessionId As Guid, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: AdvanceFileUpload.Application.IUploadManger.PauseUploadSessionAsync*
references:
- uid: AdvanceFileUpload.Application
  commentId: N:AdvanceFileUpload.Application
  href: AdvanceFileUpload.html
  name: AdvanceFileUpload.Application
  nameWithType: AdvanceFileUpload.Application
  fullName: AdvanceFileUpload.Application
  spec.csharp:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Application
    name: Application
    href: AdvanceFileUpload.Application.html
  spec.vb:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Application
    name: Application
    href: AdvanceFileUpload.Application.html
- uid: AdvanceFileUpload.Application.IUploadManger.CreateUploadSessionAsync*
  commentId: Overload:AdvanceFileUpload.Application.IUploadManger.CreateUploadSessionAsync
  href: AdvanceFileUpload.Application.IUploadManger.html#AdvanceFileUpload_Application_IUploadManger_CreateUploadSessionAsync_AdvanceFileUpload_Application_Shared_CreateUploadSessionRequest_System_Threading_CancellationToken_
  name: CreateUploadSessionAsync
  nameWithType: IUploadManger.CreateUploadSessionAsync
  fullName: AdvanceFileUpload.Application.IUploadManger.CreateUploadSessionAsync
- uid: AdvanceFileUpload.Application.Shared.CreateUploadSessionRequest
  commentId: T:AdvanceFileUpload.Application.Shared.CreateUploadSessionRequest
  parent: AdvanceFileUpload.Application.Shared
  href: AdvanceFileUpload.Application.Shared.CreateUploadSessionRequest.html
  name: CreateUploadSessionRequest
  nameWithType: CreateUploadSessionRequest
  fullName: AdvanceFileUpload.Application.Shared.CreateUploadSessionRequest
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{AdvanceFileUpload.Application.Shared.CreateUploadSessionResponse}
  commentId: T:System.Threading.Tasks.Task{AdvanceFileUpload.Application.Shared.CreateUploadSessionResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CreateUploadSessionResponse>
  nameWithType: Task<CreateUploadSessionResponse>
  fullName: System.Threading.Tasks.Task<AdvanceFileUpload.Application.Shared.CreateUploadSessionResponse>
  nameWithType.vb: Task(Of CreateUploadSessionResponse)
  fullName.vb: System.Threading.Tasks.Task(Of AdvanceFileUpload.Application.Shared.CreateUploadSessionResponse)
  name.vb: Task(Of CreateUploadSessionResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AdvanceFileUpload.Application.Shared.CreateUploadSessionResponse
    name: CreateUploadSessionResponse
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AdvanceFileUpload.Application.Shared.CreateUploadSessionResponse
    name: CreateUploadSessionResponse
  - name: )
- uid: AdvanceFileUpload.Application.Shared
  commentId: N:AdvanceFileUpload.Application.Shared
  href: AdvanceFileUpload.html
  name: AdvanceFileUpload.Application.Shared
  nameWithType: AdvanceFileUpload.Application.Shared
  fullName: AdvanceFileUpload.Application.Shared
  spec.csharp:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Application
    name: Application
    href: AdvanceFileUpload.Application.html
  - name: .
  - uid: AdvanceFileUpload.Application.Shared
    name: Shared
    href: AdvanceFileUpload.Application.Shared.html
  spec.vb:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Application
    name: Application
    href: AdvanceFileUpload.Application.html
  - name: .
  - uid: AdvanceFileUpload.Application.Shared
    name: Shared
    href: AdvanceFileUpload.Application.Shared.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: AdvanceFileUpload.Application.IUploadManger.CompleteUploadSessionAsync*
  commentId: Overload:AdvanceFileUpload.Application.IUploadManger.CompleteUploadSessionAsync
  href: AdvanceFileUpload.Application.IUploadManger.html#AdvanceFileUpload_Application_IUploadManger_CompleteUploadSessionAsync_System_Guid_System_Threading_CancellationToken_
  name: CompleteUploadSessionAsync
  nameWithType: IUploadManger.CompleteUploadSessionAsync
  fullName: AdvanceFileUpload.Application.IUploadManger.CompleteUploadSessionAsync
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AdvanceFileUpload.Application.IUploadManger.UploadChunkAsync*
  commentId: Overload:AdvanceFileUpload.Application.IUploadManger.UploadChunkAsync
  href: AdvanceFileUpload.Application.IUploadManger.html#AdvanceFileUpload_Application_IUploadManger_UploadChunkAsync_AdvanceFileUpload_Application_Shared_UploadChunkRequest_System_Threading_CancellationToken_
  name: UploadChunkAsync
  nameWithType: IUploadManger.UploadChunkAsync
  fullName: AdvanceFileUpload.Application.IUploadManger.UploadChunkAsync
- uid: AdvanceFileUpload.Application.Shared.UploadChunkRequest
  commentId: T:AdvanceFileUpload.Application.Shared.UploadChunkRequest
  parent: AdvanceFileUpload.Application.Shared
  href: AdvanceFileUpload.Application.Shared.UploadChunkRequest.html
  name: UploadChunkRequest
  nameWithType: UploadChunkRequest
  fullName: AdvanceFileUpload.Application.Shared.UploadChunkRequest
- uid: AdvanceFileUpload.Application.IUploadManger.GetUploadSessionStatusAsync*
  commentId: Overload:AdvanceFileUpload.Application.IUploadManger.GetUploadSessionStatusAsync
  href: AdvanceFileUpload.Application.IUploadManger.html#AdvanceFileUpload_Application_IUploadManger_GetUploadSessionStatusAsync_System_Guid_System_Threading_CancellationToken_
  name: GetUploadSessionStatusAsync
  nameWithType: IUploadManger.GetUploadSessionStatusAsync
  fullName: AdvanceFileUpload.Application.IUploadManger.GetUploadSessionStatusAsync
- uid: System.Threading.Tasks.Task{AdvanceFileUpload.Application.Shared.UploadSessionStatusResponse}
  commentId: T:System.Threading.Tasks.Task{AdvanceFileUpload.Application.Shared.UploadSessionStatusResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UploadSessionStatusResponse>
  nameWithType: Task<UploadSessionStatusResponse>
  fullName: System.Threading.Tasks.Task<AdvanceFileUpload.Application.Shared.UploadSessionStatusResponse>
  nameWithType.vb: Task(Of UploadSessionStatusResponse)
  fullName.vb: System.Threading.Tasks.Task(Of AdvanceFileUpload.Application.Shared.UploadSessionStatusResponse)
  name.vb: Task(Of UploadSessionStatusResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AdvanceFileUpload.Application.Shared.UploadSessionStatusResponse
    name: UploadSessionStatusResponse
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AdvanceFileUpload.Application.Shared.UploadSessionStatusResponse
    name: UploadSessionStatusResponse
  - name: )
- uid: AdvanceFileUpload.Application.IUploadManger.CancelUploadSessionAsync*
  commentId: Overload:AdvanceFileUpload.Application.IUploadManger.CancelUploadSessionAsync
  href: AdvanceFileUpload.Application.IUploadManger.html#AdvanceFileUpload_Application_IUploadManger_CancelUploadSessionAsync_System_Guid_System_Threading_CancellationToken_
  name: CancelUploadSessionAsync
  nameWithType: IUploadManger.CancelUploadSessionAsync
  fullName: AdvanceFileUpload.Application.IUploadManger.CancelUploadSessionAsync
- uid: AdvanceFileUpload.Application.IUploadManger.PauseUploadSessionAsync*
  commentId: Overload:AdvanceFileUpload.Application.IUploadManger.PauseUploadSessionAsync
  href: AdvanceFileUpload.Application.IUploadManger.html#AdvanceFileUpload_Application_IUploadManger_PauseUploadSessionAsync_System_Guid_System_Threading_CancellationToken_
  name: PauseUploadSessionAsync
  nameWithType: IUploadManger.PauseUploadSessionAsync
  fullName: AdvanceFileUpload.Application.IUploadManger.PauseUploadSessionAsync
