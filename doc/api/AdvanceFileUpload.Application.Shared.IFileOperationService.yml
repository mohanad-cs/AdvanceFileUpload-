### YamlMime:ManagedReference
items:
- uid: AdvanceFileUpload.Application.Shared.IFileOperationService
  commentId: T:AdvanceFileUpload.Application.Shared.IFileOperationService
  id: IFileOperationService
  parent: AdvanceFileUpload.Application.Shared
  children:
  - AdvanceFileUpload.Application.Shared.IFileOperationService.ConcatenateChunksAsync(System.Collections.Generic.List{System.String},System.String,System.Threading.CancellationToken)
  - AdvanceFileUpload.Application.Shared.IFileOperationService.SaveFileAsync(System.String,System.Byte[],System.String,System.Threading.CancellationToken)
  - AdvanceFileUpload.Application.Shared.IFileOperationService.SplitFileIntoChunksAsync(System.String,System.Int64,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IFileOperationService
  nameWithType: IFileOperationService
  fullName: AdvanceFileUpload.Application.Shared.IFileOperationService
  type: Interface
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application.Shared/IFileOprationServise.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: IFileOperationService
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application.Shared/IFileOprationServise.cs
    startLine: 10
  assemblies:
  - AdvanceFileUpload.Application.Shared
  namespace: AdvanceFileUpload.Application.Shared
  summary: Provides methods for file operations such as concatenating file chunks, saving files, and splitting files into chunks.
  example: []
  syntax:
    content: public interface IFileOperationService
    content.vb: Public Interface IFileOperationService
- uid: AdvanceFileUpload.Application.Shared.IFileOperationService.ConcatenateChunksAsync(System.Collections.Generic.List{System.String},System.String,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Application.Shared.IFileOperationService.ConcatenateChunksAsync(System.Collections.Generic.List{System.String},System.String,System.Threading.CancellationToken)
  id: ConcatenateChunksAsync(System.Collections.Generic.List{System.String},System.String,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Application.Shared.IFileOperationService
  langs:
  - csharp
  - vb
  name: ConcatenateChunksAsync(List<string>, string, CancellationToken)
  nameWithType: IFileOperationService.ConcatenateChunksAsync(List<string>, string, CancellationToken)
  fullName: AdvanceFileUpload.Application.Shared.IFileOperationService.ConcatenateChunksAsync(System.Collections.Generic.List<string>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application.Shared/IFileOprationServise.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: ConcatenateChunksAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application.Shared/IFileOprationServise.cs
    startLine: 20
  assemblies:
  - AdvanceFileUpload.Application.Shared
  namespace: AdvanceFileUpload.Application.Shared
  summary: Concatenates multiple file chunks into a single file.
  example: []
  syntax:
    content: Task ConcatenateChunksAsync(List<string> chunkPaths, string outputFilePath, CancellationToken cancellationToken = default)
    parameters:
    - id: chunkPaths
      type: System.Collections.Generic.List{System.String}
      description: The list of paths to the file chunks.
    - id: outputFilePath
      type: System.String
      description: The path where the concatenated file will be saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Function ConcatenateChunksAsync(chunkPaths As List(Of String), outputFilePath As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: AdvanceFileUpload.Application.Shared.IFileOperationService.ConcatenateChunksAsync*
  nameWithType.vb: IFileOperationService.ConcatenateChunksAsync(List(Of String), String, CancellationToken)
  fullName.vb: AdvanceFileUpload.Application.Shared.IFileOperationService.ConcatenateChunksAsync(System.Collections.Generic.List(Of String), String, System.Threading.CancellationToken)
  name.vb: ConcatenateChunksAsync(List(Of String), String, CancellationToken)
- uid: AdvanceFileUpload.Application.Shared.IFileOperationService.SaveFileAsync(System.String,System.Byte[],System.String,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Application.Shared.IFileOperationService.SaveFileAsync(System.String,System.Byte[],System.String,System.Threading.CancellationToken)
  id: SaveFileAsync(System.String,System.Byte[],System.String,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Application.Shared.IFileOperationService
  langs:
  - csharp
  - vb
  name: SaveFileAsync(string, byte[], string, CancellationToken)
  nameWithType: IFileOperationService.SaveFileAsync(string, byte[], string, CancellationToken)
  fullName: AdvanceFileUpload.Application.Shared.IFileOperationService.SaveFileAsync(string, byte[], string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application.Shared/IFileOprationServise.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: SaveFileAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application.Shared/IFileOprationServise.cs
    startLine: 29
  assemblies:
  - AdvanceFileUpload.Application.Shared
  namespace: AdvanceFileUpload.Application.Shared
  summary: Saves a file to the specified directory.
  example: []
  syntax:
    content: Task SaveFileAsync(string fileName, byte[] fileData, string directory, CancellationToken cancellationToken = default)
    parameters:
    - id: fileName
      type: System.String
      description: The name of the file to save.
    - id: fileData
      type: System.Byte[]
      description: The byte array containing the file data.
    - id: directory
      type: System.String
      description: The directory where the file will be saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Function SaveFileAsync(fileName As String, fileData As Byte(), directory As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: AdvanceFileUpload.Application.Shared.IFileOperationService.SaveFileAsync*
  nameWithType.vb: IFileOperationService.SaveFileAsync(String, Byte(), String, CancellationToken)
  fullName.vb: AdvanceFileUpload.Application.Shared.IFileOperationService.SaveFileAsync(String, Byte(), String, System.Threading.CancellationToken)
  name.vb: SaveFileAsync(String, Byte(), String, CancellationToken)
- uid: AdvanceFileUpload.Application.Shared.IFileOperationService.SplitFileIntoChunksAsync(System.String,System.Int64,System.String,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Application.Shared.IFileOperationService.SplitFileIntoChunksAsync(System.String,System.Int64,System.String,System.Threading.CancellationToken)
  id: SplitFileIntoChunksAsync(System.String,System.Int64,System.String,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Application.Shared.IFileOperationService
  langs:
  - csharp
  - vb
  name: SplitFileIntoChunksAsync(string, long, string, CancellationToken)
  nameWithType: IFileOperationService.SplitFileIntoChunksAsync(string, long, string, CancellationToken)
  fullName: AdvanceFileUpload.Application.Shared.IFileOperationService.SplitFileIntoChunksAsync(string, long, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Application.Shared/IFileOprationServise.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: SplitFileIntoChunksAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Application.Shared/IFileOprationServise.cs
    startLine: 38
  assemblies:
  - AdvanceFileUpload.Application.Shared
  namespace: AdvanceFileUpload.Application.Shared
  summary: Splits a file into multiple chunks.
  example: []
  syntax:
    content: Task<List<string>> SplitFileIntoChunksAsync(string filePath, long chunkSize, string outputDirectory, CancellationToken cancellationToken = default)
    parameters:
    - id: filePath
      type: System.String
      description: The path to the file to be split.
    - id: chunkSize
      type: System.Int64
      description: The size of each chunk in bytes.
    - id: outputDirectory
      type: System.String
      description: The directory where the chunks will be saved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
      description: A task that represents the asynchronous operation. The task result contains a list of paths to the created chunks.
    content.vb: Function SplitFileIntoChunksAsync(filePath As String, chunkSize As Long, outputDirectory As String, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of String))
  overload: AdvanceFileUpload.Application.Shared.IFileOperationService.SplitFileIntoChunksAsync*
  nameWithType.vb: IFileOperationService.SplitFileIntoChunksAsync(String, Long, String, CancellationToken)
  fullName.vb: AdvanceFileUpload.Application.Shared.IFileOperationService.SplitFileIntoChunksAsync(String, Long, String, System.Threading.CancellationToken)
  name.vb: SplitFileIntoChunksAsync(String, Long, String, CancellationToken)
references:
- uid: AdvanceFileUpload.Application.Shared
  commentId: N:AdvanceFileUpload.Application.Shared
  href: AdvanceFileUpload.html
  name: AdvanceFileUpload.Application.Shared
  nameWithType: AdvanceFileUpload.Application.Shared
  fullName: AdvanceFileUpload.Application.Shared
  spec.csharp:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Application
    name: Application
    href: AdvanceFileUpload.Application.html
  - name: .
  - uid: AdvanceFileUpload.Application.Shared
    name: Shared
    href: AdvanceFileUpload.Application.Shared.html
  spec.vb:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Application
    name: Application
    href: AdvanceFileUpload.Application.html
  - name: .
  - uid: AdvanceFileUpload.Application.Shared
    name: Shared
    href: AdvanceFileUpload.Application.Shared.html
- uid: AdvanceFileUpload.Application.Shared.IFileOperationService.ConcatenateChunksAsync*
  commentId: Overload:AdvanceFileUpload.Application.Shared.IFileOperationService.ConcatenateChunksAsync
  href: AdvanceFileUpload.Application.Shared.IFileOperationService.html#AdvanceFileUpload_Application_Shared_IFileOperationService_ConcatenateChunksAsync_System_Collections_Generic_List_System_String__System_String_System_Threading_CancellationToken_
  name: ConcatenateChunksAsync
  nameWithType: IFileOperationService.ConcatenateChunksAsync
  fullName: AdvanceFileUpload.Application.Shared.IFileOperationService.ConcatenateChunksAsync
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: AdvanceFileUpload.Application.Shared.IFileOperationService.SaveFileAsync*
  commentId: Overload:AdvanceFileUpload.Application.Shared.IFileOperationService.SaveFileAsync
  href: AdvanceFileUpload.Application.Shared.IFileOperationService.html#AdvanceFileUpload_Application_Shared_IFileOperationService_SaveFileAsync_System_String_System_Byte___System_String_System_Threading_CancellationToken_
  name: SaveFileAsync
  nameWithType: IFileOperationService.SaveFileAsync
  fullName: AdvanceFileUpload.Application.Shared.IFileOperationService.SaveFileAsync
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: AdvanceFileUpload.Application.Shared.IFileOperationService.SplitFileIntoChunksAsync*
  commentId: Overload:AdvanceFileUpload.Application.Shared.IFileOperationService.SplitFileIntoChunksAsync
  href: AdvanceFileUpload.Application.Shared.IFileOperationService.html#AdvanceFileUpload_Application_Shared_IFileOperationService_SplitFileIntoChunksAsync_System_String_System_Int64_System_String_System_Threading_CancellationToken_
  name: SplitFileIntoChunksAsync
  nameWithType: IFileOperationService.SplitFileIntoChunksAsync
  fullName: AdvanceFileUpload.Application.Shared.IFileOperationService.SplitFileIntoChunksAsync
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<string>>
  nameWithType: Task<List<string>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<string>>
  nameWithType.vb: Task(Of List(Of String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of String))
  name.vb: Task(Of List(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
