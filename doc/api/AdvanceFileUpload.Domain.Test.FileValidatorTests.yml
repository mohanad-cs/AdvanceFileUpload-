### YamlMime:ManagedReference
items:
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests
  commentId: T:AdvanceFileUpload.Domain.Test.FileValidatorTests
  id: FileValidatorTests
  parent: AdvanceFileUpload.Domain.Test
  children:
  - AdvanceFileUpload.Domain.Test.FileValidatorTests.#ctor
  - AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(System.String,System.String[])
  - AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue(System.String,System.String[])
  - AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse(System.String)
  - AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue(System.String)
  - AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse(System.Int64,System.Int64)
  - AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue(System.Int64,System.Int64)
  langs:
  - csharp
  - vb
  name: FileValidatorTests
  nameWithType: FileValidatorTests
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests
  type: Class
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: FileValidatorTests
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
    startLine: 4
  assemblies:
  - AdvanceFileUpload.Domain.Test
  namespace: AdvanceFileUpload.Domain.Test
  syntax:
    content: public class FileValidatorTests
    content.vb: Public Class FileValidatorTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.#ctor
  commentId: M:AdvanceFileUpload.Domain.Test.FileValidatorTests.#ctor
  id: '#ctor'
  parent: AdvanceFileUpload.Domain.Test.FileValidatorTests
  langs:
  - csharp
  - vb
  name: FileValidatorTests()
  nameWithType: FileValidatorTests.FileValidatorTests()
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.FileValidatorTests()
  type: Constructor
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: .ctor
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
    startLine: 8
  assemblies:
  - AdvanceFileUpload.Domain.Test
  namespace: AdvanceFileUpload.Domain.Test
  syntax:
    content: public FileValidatorTests()
    content.vb: Public Sub New()
  overload: AdvanceFileUpload.Domain.Test.FileValidatorTests.#ctor*
  nameWithType.vb: FileValidatorTests.New()
  fullName.vb: AdvanceFileUpload.Domain.Test.FileValidatorTests.New()
  name.vb: New()
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse(System.String)
  commentId: M:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse(System.String)
  id: IsValidateFileName_InvalidFileName_ReturnsFalse(System.String)
  parent: AdvanceFileUpload.Domain.Test.FileValidatorTests
  langs:
  - csharp
  - vb
  name: IsValidateFileName_InvalidFileName_ReturnsFalse(string)
  nameWithType: FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse(string)
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse(string)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: IsValidateFileName_InvalidFileName_ReturnsFalse
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
    startLine: 13
  assemblies:
  - AdvanceFileUpload.Domain.Test
  namespace: AdvanceFileUpload.Domain.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(null)]

      [InlineData(new object[] { "" })]

      [InlineData(new object[] { " " })]

      [InlineData(new object[] { "file:.pdf" })]

      [InlineData(new object[] { "file?.pdf" })]

      [InlineData(new object[] { "fi\\le.pdf" })]

      public void IsValidateFileName_InvalidFileName_ReturnsFalse(string fileName)
    parameters:
    - id: fileName
      type: System.String
    content.vb: >-
      <Theory>

      <InlineData(Nothing)>

      <InlineData(New Object() { "" })>

      <InlineData(New Object() { " " })>

      <InlineData(New Object() { "file:.pdf" })>

      <InlineData(New Object() { "file?.pdf" })>

      <InlineData(New Object() { "fi\le.pdf" })>

      Public Sub IsValidateFileName_InvalidFileName_ReturnsFalse(fileName As String)
  overload: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse(String)
  fullName.vb: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse(String)
  name.vb: IsValidateFileName_InvalidFileName_ReturnsFalse(String)
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue(System.String)
  commentId: M:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue(System.String)
  id: IsValidateFileName_ValidFileName_ReturnsTrue(System.String)
  parent: AdvanceFileUpload.Domain.Test.FileValidatorTests
  langs:
  - csharp
  - vb
  name: IsValidateFileName_ValidFileName_ReturnsTrue(string)
  nameWithType: FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue(string)
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue(string)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: IsValidateFileName_ValidFileName_ReturnsTrue
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
    startLine: 26
  assemblies:
  - AdvanceFileUpload.Domain.Test
  namespace: AdvanceFileUpload.Domain.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "validFileName.txt" })]

      [InlineData(new object[] { "validFileName.pdf" })]

      public void IsValidateFileName_ValidFileName_ReturnsTrue(string fileName)
    parameters:
    - id: fileName
      type: System.String
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "validFileName.txt" })>

      <InlineData(New Object() { "validFileName.pdf" })>

      Public Sub IsValidateFileName_ValidFileName_ReturnsTrue(fileName As String)
  overload: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue(String)
  fullName.vb: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue(String)
  name.vb: IsValidateFileName_ValidFileName_ReturnsTrue(String)
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse(System.Int64,System.Int64)
  commentId: M:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse(System.Int64,System.Int64)
  id: IsValidateFileSize_InvalidFileSize_ReturnsFalse(System.Int64,System.Int64)
  parent: AdvanceFileUpload.Domain.Test.FileValidatorTests
  langs:
  - csharp
  - vb
  name: IsValidateFileSize_InvalidFileSize_ReturnsFalse(long, long)
  nameWithType: FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse(long, long)
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse(long, long)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: IsValidateFileSize_InvalidFileSize_ReturnsFalse
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
    startLine: 35
  assemblies:
  - AdvanceFileUpload.Domain.Test
  namespace: AdvanceFileUpload.Domain.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { 10, 0 })]

      [InlineData(new object[] { 0, 0 })]

      [InlineData(new object[] { 0, 100 })]

      [InlineData(new object[] { -1, 100 })]

      [InlineData(new object[] { 101, 100 })]

      public void IsValidateFileSize_InvalidFileSize_ReturnsFalse(long fileSize, long maxFileSize)
    parameters:
    - id: fileSize
      type: System.Int64
    - id: maxFileSize
      type: System.Int64
    content.vb: >-
      <Theory>

      <InlineData(New Object() { 10, 0 })>

      <InlineData(New Object() { 0, 0 })>

      <InlineData(New Object() { 0, 100 })>

      <InlineData(New Object() { -1, 100 })>

      <InlineData(New Object() { 101, 100 })>

      Public Sub IsValidateFileSize_InvalidFileSize_ReturnsFalse(fileSize As Long, maxFileSize As Long)
  overload: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse(Long, Long)
  fullName.vb: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse(Long, Long)
  name.vb: IsValidateFileSize_InvalidFileSize_ReturnsFalse(Long, Long)
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue(System.Int64,System.Int64)
  commentId: M:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue(System.Int64,System.Int64)
  id: IsValidateFileSize_ValidFileSize_ReturnsTrue(System.Int64,System.Int64)
  parent: AdvanceFileUpload.Domain.Test.FileValidatorTests
  langs:
  - csharp
  - vb
  name: IsValidateFileSize_ValidFileSize_ReturnsTrue(long, long)
  nameWithType: FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue(long, long)
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue(long, long)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: IsValidateFileSize_ValidFileSize_ReturnsTrue
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
    startLine: 47
  assemblies:
  - AdvanceFileUpload.Domain.Test
  namespace: AdvanceFileUpload.Domain.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { 50, 100 })]

      [InlineData(new object[] { 100, 100 })]

      public void IsValidateFileSize_ValidFileSize_ReturnsTrue(long fileSize, long maxFileSize)
    parameters:
    - id: fileSize
      type: System.Int64
    - id: maxFileSize
      type: System.Int64
    content.vb: >-
      <Theory>

      <InlineData(New Object() { 50, 100 })>

      <InlineData(New Object() { 100, 100 })>

      Public Sub IsValidateFileSize_ValidFileSize_ReturnsTrue(fileSize As Long, maxFileSize As Long)
  overload: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue(Long, Long)
  fullName.vb: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue(Long, Long)
  name.vb: IsValidateFileSize_ValidFileSize_ReturnsTrue(Long, Long)
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(System.String,System.String[])
  commentId: M:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(System.String,System.String[])
  id: IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(System.String,System.String[])
  parent: AdvanceFileUpload.Domain.Test.FileValidatorTests
  langs:
  - csharp
  - vb
  name: IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(string, string[])
  nameWithType: FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(string, string[])
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(string, string[])
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: IsValidateFileExtension_InvalidFileExtension_ReturnsFalse
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
    startLine: 56
  assemblies:
  - AdvanceFileUpload.Domain.Test
  namespace: AdvanceFileUpload.Domain.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { null, new string[] { ".txt", ".pdf" } })]

      [InlineData(new object[] { "", new string[] { ".txt", ".pdf" } })]

      [InlineData(new object[] { ".", new string[] { ".txt", ".pdf" } })]

      [InlineData(new object[] { ".exe", new string[] { ".txt", ".pdf" } })]

      [InlineData(new object[] { ".txt", null })]

      [InlineData(new object[] { ".txt", new string[] { } })]

      public void IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(string fileExtension, string[] allowedExtensions)
    parameters:
    - id: fileExtension
      type: System.String
    - id: allowedExtensions
      type: System.String[]
    content.vb: >-
      <Theory>

      <InlineData(New Object() { Nothing, New String() { ".txt", ".pdf" } })>

      <InlineData(New Object() { "", New String() { ".txt", ".pdf" } })>

      <InlineData(New Object() { ".", New String() { ".txt", ".pdf" } })>

      <InlineData(New Object() { ".exe", New String() { ".txt", ".pdf" } })>

      <InlineData(New Object() { ".txt", Nothing })>

      <InlineData(New Object() { ".txt", New String() { } })>

      Public Sub IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(fileExtension As String, allowedExtensions As String())
  overload: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(String, String())
  fullName.vb: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(String, String())
  name.vb: IsValidateFileExtension_InvalidFileExtension_ReturnsFalse(String, String())
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue(System.String,System.String[])
  commentId: M:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue(System.String,System.String[])
  id: IsValidateFileExtension_ValidFileExtension_ReturnsTrue(System.String,System.String[])
  parent: AdvanceFileUpload.Domain.Test.FileValidatorTests
  langs:
  - csharp
  - vb
  name: IsValidateFileExtension_ValidFileExtension_ReturnsTrue(string, string[])
  nameWithType: FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue(string, string[])
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue(string, string[])
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: IsValidateFileExtension_ValidFileExtension_ReturnsTrue
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Domain.Test/FileValidatorTests.cs
    startLine: 69
  assemblies:
  - AdvanceFileUpload.Domain.Test
  namespace: AdvanceFileUpload.Domain.Test
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { ".txt", new string[] { ".txt", ".pdf" } })]

      public void IsValidateFileExtension_ValidFileExtension_ReturnsTrue(string fileExtension, string[] allowedExtensions)
    parameters:
    - id: fileExtension
      type: System.String
    - id: allowedExtensions
      type: System.String[]
    content.vb: >-
      <Theory>

      <InlineData(New Object() { ".txt", New String() { ".txt", ".pdf" } })>

      Public Sub IsValidateFileExtension_ValidFileExtension_ReturnsTrue(fileExtension As String, allowedExtensions As String())
  overload: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue(String, String())
  fullName.vb: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue(String, String())
  name.vb: IsValidateFileExtension_ValidFileExtension_ReturnsTrue(String, String())
references:
- uid: AdvanceFileUpload.Domain.Test
  commentId: N:AdvanceFileUpload.Domain.Test
  href: AdvanceFileUpload.html
  name: AdvanceFileUpload.Domain.Test
  nameWithType: AdvanceFileUpload.Domain.Test
  fullName: AdvanceFileUpload.Domain.Test
  spec.csharp:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Domain
    name: Domain
    href: AdvanceFileUpload.Domain.html
  - name: .
  - uid: AdvanceFileUpload.Domain.Test
    name: Test
    href: AdvanceFileUpload.Domain.Test.html
  spec.vb:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Domain
    name: Domain
    href: AdvanceFileUpload.Domain.html
  - name: .
  - uid: AdvanceFileUpload.Domain.Test
    name: Test
    href: AdvanceFileUpload.Domain.Test.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.#ctor*
  commentId: Overload:AdvanceFileUpload.Domain.Test.FileValidatorTests.#ctor
  href: AdvanceFileUpload.Domain.Test.FileValidatorTests.html#AdvanceFileUpload_Domain_Test_FileValidatorTests__ctor
  name: FileValidatorTests
  nameWithType: FileValidatorTests.FileValidatorTests
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.FileValidatorTests
  nameWithType.vb: FileValidatorTests.New
  fullName.vb: AdvanceFileUpload.Domain.Test.FileValidatorTests.New
  name.vb: New
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse*
  commentId: Overload:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse
  href: AdvanceFileUpload.Domain.Test.FileValidatorTests.html#AdvanceFileUpload_Domain_Test_FileValidatorTests_IsValidateFileName_InvalidFileName_ReturnsFalse_System_String_
  name: IsValidateFileName_InvalidFileName_ReturnsFalse
  nameWithType: FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_InvalidFileName_ReturnsFalse
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue*
  commentId: Overload:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue
  href: AdvanceFileUpload.Domain.Test.FileValidatorTests.html#AdvanceFileUpload_Domain_Test_FileValidatorTests_IsValidateFileName_ValidFileName_ReturnsTrue_System_String_
  name: IsValidateFileName_ValidFileName_ReturnsTrue
  nameWithType: FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileName_ValidFileName_ReturnsTrue
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse*
  commentId: Overload:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse
  href: AdvanceFileUpload.Domain.Test.FileValidatorTests.html#AdvanceFileUpload_Domain_Test_FileValidatorTests_IsValidateFileSize_InvalidFileSize_ReturnsFalse_System_Int64_System_Int64_
  name: IsValidateFileSize_InvalidFileSize_ReturnsFalse
  nameWithType: FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_InvalidFileSize_ReturnsFalse
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue*
  commentId: Overload:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue
  href: AdvanceFileUpload.Domain.Test.FileValidatorTests.html#AdvanceFileUpload_Domain_Test_FileValidatorTests_IsValidateFileSize_ValidFileSize_ReturnsTrue_System_Int64_System_Int64_
  name: IsValidateFileSize_ValidFileSize_ReturnsTrue
  nameWithType: FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileSize_ValidFileSize_ReturnsTrue
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse*
  commentId: Overload:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse
  href: AdvanceFileUpload.Domain.Test.FileValidatorTests.html#AdvanceFileUpload_Domain_Test_FileValidatorTests_IsValidateFileExtension_InvalidFileExtension_ReturnsFalse_System_String_System_String___
  name: IsValidateFileExtension_InvalidFileExtension_ReturnsFalse
  nameWithType: FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_InvalidFileExtension_ReturnsFalse
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue*
  commentId: Overload:AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue
  href: AdvanceFileUpload.Domain.Test.FileValidatorTests.html#AdvanceFileUpload_Domain_Test_FileValidatorTests_IsValidateFileExtension_ValidFileExtension_ReturnsTrue_System_String_System_String___
  name: IsValidateFileExtension_ValidFileExtension_ReturnsTrue
  nameWithType: FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue
  fullName: AdvanceFileUpload.Domain.Test.FileValidatorTests.IsValidateFileExtension_ValidFileExtension_ReturnsTrue
