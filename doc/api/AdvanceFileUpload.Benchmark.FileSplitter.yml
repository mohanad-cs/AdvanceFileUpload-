### YamlMime:ManagedReference
items:
- uid: AdvanceFileUpload.Benchmark.FileSplitter
  commentId: T:AdvanceFileUpload.Benchmark.FileSplitter
  id: FileSplitter
  parent: AdvanceFileUpload.Benchmark
  children:
  - AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)
  - AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateChunksAsync(System.Collections.Generic.List{System.String},System.String,System.Threading.CancellationToken)
  - AdvanceFileUpload.Benchmark.FileSplitter.SplitAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: FileSplitter
  nameWithType: FileSplitter
  fullName: AdvanceFileUpload.Benchmark.FileSplitter
  type: Class
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Benchmark/FileSplitter.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: FileSplitter
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Benchmark/FileSplitter.cs
    startLine: 3
  assemblies:
  - AdvanceFileUpload.Benchmark
  namespace: AdvanceFileUpload.Benchmark
  syntax:
    content: public class FileSplitter
    content.vb: Public Class FileSplitter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AdvanceFileUpload.Benchmark.FileSplitter.SplitAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Benchmark.FileSplitter.SplitAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)
  id: SplitAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Benchmark.FileSplitter
  langs:
  - csharp
  - vb
  name: SplitAsync(string, string, int, CancellationToken)
  nameWithType: FileSplitter.SplitAsync(string, string, int, CancellationToken)
  fullName: AdvanceFileUpload.Benchmark.FileSplitter.SplitAsync(string, string, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Benchmark/FileSplitter.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: SplitAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Benchmark/FileSplitter.cs
    startLine: 10
  assemblies:
  - AdvanceFileUpload.Benchmark
  namespace: AdvanceFileUpload.Benchmark
  summary: Splits a large file into chunks using parallel processing and async I/O
  example: []
  syntax:
    content: public Task<List<string>> SplitAsync(string inputPath, string outputDirectory, int chunkSizeInBytes, CancellationToken cancellationToken = default)
    parameters:
    - id: inputPath
      type: System.String
    - id: outputDirectory
      type: System.String
    - id: chunkSizeInBytes
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
    content.vb: Public Function SplitAsync(inputPath As String, outputDirectory As String, chunkSizeInBytes As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of String))
  overload: AdvanceFileUpload.Benchmark.FileSplitter.SplitAsync*
  nameWithType.vb: FileSplitter.SplitAsync(String, String, Integer, CancellationToken)
  fullName.vb: AdvanceFileUpload.Benchmark.FileSplitter.SplitAsync(String, String, Integer, System.Threading.CancellationToken)
  name.vb: SplitAsync(String, String, Integer, CancellationToken)
- uid: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)
  id: ConcatenateAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Benchmark.FileSplitter
  langs:
  - csharp
  - vb
  name: ConcatenateAsync(IEnumerable<string>, string, CancellationToken)
  nameWithType: FileSplitter.ConcatenateAsync(IEnumerable<string>, string, CancellationToken)
  fullName: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateAsync(System.Collections.Generic.IEnumerable<string>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Benchmark/FileSplitter.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: ConcatenateAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Benchmark/FileSplitter.cs
    startLine: 76
  assemblies:
  - AdvanceFileUpload.Benchmark
  namespace: AdvanceFileUpload.Benchmark
  summary: Concatenates chunk files back into the original file using buffered async I/O
  example: []
  syntax:
    content: public Task ConcatenateAsync(IEnumerable<string> chunkPaths, string outputFilePath, CancellationToken cancellationToken = default)
    parameters:
    - id: chunkPaths
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: outputFilePath
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ConcatenateAsync(chunkPaths As IEnumerable(Of String), outputFilePath As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateAsync*
  nameWithType.vb: FileSplitter.ConcatenateAsync(IEnumerable(Of String), String, CancellationToken)
  fullName.vb: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateAsync(System.Collections.Generic.IEnumerable(Of String), String, System.Threading.CancellationToken)
  name.vb: ConcatenateAsync(IEnumerable(Of String), String, CancellationToken)
- uid: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateChunksAsync(System.Collections.Generic.List{System.String},System.String,System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateChunksAsync(System.Collections.Generic.List{System.String},System.String,System.Threading.CancellationToken)
  id: ConcatenateChunksAsync(System.Collections.Generic.List{System.String},System.String,System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Benchmark.FileSplitter
  langs:
  - csharp
  - vb
  name: ConcatenateChunksAsync(List<string>, string, CancellationToken)
  nameWithType: FileSplitter.ConcatenateChunksAsync(List<string>, string, CancellationToken)
  fullName: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateChunksAsync(System.Collections.Generic.List<string>, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Benchmark/FileSplitter.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: ConcatenateChunksAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Benchmark/FileSplitter.cs
    startLine: 162
  assemblies:
  - AdvanceFileUpload.Benchmark
  namespace: AdvanceFileUpload.Benchmark
  syntax:
    content: public Task ConcatenateChunksAsync(List<string> chunkPaths, string outputFilePath, CancellationToken cancellationToken = default)
    parameters:
    - id: chunkPaths
      type: System.Collections.Generic.List{System.String}
    - id: outputFilePath
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ConcatenateChunksAsync(chunkPaths As List(Of String), outputFilePath As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateChunksAsync*
  nameWithType.vb: FileSplitter.ConcatenateChunksAsync(List(Of String), String, CancellationToken)
  fullName.vb: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateChunksAsync(System.Collections.Generic.List(Of String), String, System.Threading.CancellationToken)
  name.vb: ConcatenateChunksAsync(List(Of String), String, CancellationToken)
references:
- uid: AdvanceFileUpload.Benchmark
  commentId: N:AdvanceFileUpload.Benchmark
  href: AdvanceFileUpload.html
  name: AdvanceFileUpload.Benchmark
  nameWithType: AdvanceFileUpload.Benchmark
  fullName: AdvanceFileUpload.Benchmark
  spec.csharp:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Benchmark
    name: Benchmark
    href: AdvanceFileUpload.Benchmark.html
  spec.vb:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Benchmark
    name: Benchmark
    href: AdvanceFileUpload.Benchmark.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AdvanceFileUpload.Benchmark.FileSplitter.SplitAsync*
  commentId: Overload:AdvanceFileUpload.Benchmark.FileSplitter.SplitAsync
  href: AdvanceFileUpload.Benchmark.FileSplitter.html#AdvanceFileUpload_Benchmark_FileSplitter_SplitAsync_System_String_System_String_System_Int32_System_Threading_CancellationToken_
  name: SplitAsync
  nameWithType: FileSplitter.SplitAsync
  fullName: AdvanceFileUpload.Benchmark.FileSplitter.SplitAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<string>>
  nameWithType: Task<List<string>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<string>>
  nameWithType.vb: Task(Of List(Of String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of String))
  name.vb: Task(Of List(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateAsync*
  commentId: Overload:AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateAsync
  href: AdvanceFileUpload.Benchmark.FileSplitter.html#AdvanceFileUpload_Benchmark_FileSplitter_ConcatenateAsync_System_Collections_Generic_IEnumerable_System_String__System_String_System_Threading_CancellationToken_
  name: ConcatenateAsync
  nameWithType: FileSplitter.ConcatenateAsync
  fullName: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateAsync
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateChunksAsync*
  commentId: Overload:AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateChunksAsync
  href: AdvanceFileUpload.Benchmark.FileSplitter.html#AdvanceFileUpload_Benchmark_FileSplitter_ConcatenateChunksAsync_System_Collections_Generic_List_System_String__System_String_System_Threading_CancellationToken_
  name: ConcatenateChunksAsync
  nameWithType: FileSplitter.ConcatenateChunksAsync
  fullName: AdvanceFileUpload.Benchmark.FileSplitter.ConcatenateChunksAsync
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
