### YamlMime:ManagedReference
items:
- uid: AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher
  commentId: T:AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher
  id: IIntegrationEventPublisher
  parent: AdvanceFileUpload.Integration.Contracts
  children:
  - AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher.PublishAsync``1(AdvanceFileUpload.Integration.Contracts.PublishMessage{``0},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IIntegrationEventPublisher
  nameWithType: IIntegrationEventPublisher
  fullName: AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher
  type: Interface
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Integration.Contracts/IIntegrationEventPublisher.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: IIntegrationEventPublisher
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Integration.Contracts/IIntegrationEventPublisher.cs
    startLine: 3
  assemblies:
  - AdvanceFileUpload.Integration.Contracts
  namespace: AdvanceFileUpload.Integration.Contracts
  syntax:
    content: public interface IIntegrationEventPublisher
    content.vb: Public Interface IIntegrationEventPublisher
- uid: AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher.PublishAsync``1(AdvanceFileUpload.Integration.Contracts.PublishMessage{``0},System.Threading.CancellationToken)
  commentId: M:AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher.PublishAsync``1(AdvanceFileUpload.Integration.Contracts.PublishMessage{``0},System.Threading.CancellationToken)
  id: PublishAsync``1(AdvanceFileUpload.Integration.Contracts.PublishMessage{``0},System.Threading.CancellationToken)
  parent: AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher
  langs:
  - csharp
  - vb
  name: PublishAsync<T>(PublishMessage<T>, CancellationToken)
  nameWithType: IIntegrationEventPublisher.PublishAsync<T>(PublishMessage<T>, CancellationToken)
  fullName: AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher.PublishAsync<T>(AdvanceFileUpload.Integration.Contracts.PublishMessage<T>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AdvanceFileUpload/AdvanceFileUpload.Integration.Contracts/IIntegrationEventPublisher.cs
      branch: main
      repo: https://github.com/mohanad-cs/AdvanceFileUpload-.git
    id: PublishAsync
    path: ../src/AdvanceFileUpload/AdvanceFileUpload.Integration.Contracts/IIntegrationEventPublisher.cs
    startLine: 5
  assemblies:
  - AdvanceFileUpload.Integration.Contracts
  namespace: AdvanceFileUpload.Integration.Contracts
  syntax:
    content: 'Task PublishAsync<T>(PublishMessage<T> message, CancellationToken cancellationToken = default) where T : class'
    parameters:
    - id: message
      type: AdvanceFileUpload.Integration.Contracts.PublishMessage{{T}}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function PublishAsync(Of T As Class)(message As PublishMessage(Of T), cancellationToken As CancellationToken = Nothing) As Task
  overload: AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher.PublishAsync*
  nameWithType.vb: IIntegrationEventPublisher.PublishAsync(Of T)(PublishMessage(Of T), CancellationToken)
  fullName.vb: AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher.PublishAsync(Of T)(AdvanceFileUpload.Integration.Contracts.PublishMessage(Of T), System.Threading.CancellationToken)
  name.vb: PublishAsync(Of T)(PublishMessage(Of T), CancellationToken)
references:
- uid: AdvanceFileUpload.Integration.Contracts
  commentId: N:AdvanceFileUpload.Integration.Contracts
  href: AdvanceFileUpload.html
  name: AdvanceFileUpload.Integration.Contracts
  nameWithType: AdvanceFileUpload.Integration.Contracts
  fullName: AdvanceFileUpload.Integration.Contracts
  spec.csharp:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Integration
    name: Integration
    href: AdvanceFileUpload.Integration.html
  - name: .
  - uid: AdvanceFileUpload.Integration.Contracts
    name: Contracts
    href: AdvanceFileUpload.Integration.Contracts.html
  spec.vb:
  - uid: AdvanceFileUpload
    name: AdvanceFileUpload
    href: AdvanceFileUpload.html
  - name: .
  - uid: AdvanceFileUpload.Integration
    name: Integration
    href: AdvanceFileUpload.Integration.html
  - name: .
  - uid: AdvanceFileUpload.Integration.Contracts
    name: Contracts
    href: AdvanceFileUpload.Integration.Contracts.html
- uid: AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher.PublishAsync*
  commentId: Overload:AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher.PublishAsync
  href: AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher.html#AdvanceFileUpload_Integration_Contracts_IIntegrationEventPublisher_PublishAsync__1_AdvanceFileUpload_Integration_Contracts_PublishMessage___0__System_Threading_CancellationToken_
  name: PublishAsync
  nameWithType: IIntegrationEventPublisher.PublishAsync
  fullName: AdvanceFileUpload.Integration.Contracts.IIntegrationEventPublisher.PublishAsync
- uid: AdvanceFileUpload.Integration.Contracts.PublishMessage{{T}}
  commentId: T:AdvanceFileUpload.Integration.Contracts.PublishMessage{``0}
  parent: AdvanceFileUpload.Integration.Contracts
  definition: AdvanceFileUpload.Integration.Contracts.PublishMessage`1
  href: AdvanceFileUpload.Integration.Contracts.PublishMessage-1.html
  name: PublishMessage<T>
  nameWithType: PublishMessage<T>
  fullName: AdvanceFileUpload.Integration.Contracts.PublishMessage<T>
  nameWithType.vb: PublishMessage(Of T)
  fullName.vb: AdvanceFileUpload.Integration.Contracts.PublishMessage(Of T)
  name.vb: PublishMessage(Of T)
  spec.csharp:
  - uid: AdvanceFileUpload.Integration.Contracts.PublishMessage`1
    name: PublishMessage
    href: AdvanceFileUpload.Integration.Contracts.PublishMessage-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AdvanceFileUpload.Integration.Contracts.PublishMessage`1
    name: PublishMessage
    href: AdvanceFileUpload.Integration.Contracts.PublishMessage-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: AdvanceFileUpload.Integration.Contracts.PublishMessage`1
  commentId: T:AdvanceFileUpload.Integration.Contracts.PublishMessage`1
  href: AdvanceFileUpload.Integration.Contracts.PublishMessage-1.html
  name: PublishMessage<T>
  nameWithType: PublishMessage<T>
  fullName: AdvanceFileUpload.Integration.Contracts.PublishMessage<T>
  nameWithType.vb: PublishMessage(Of T)
  fullName.vb: AdvanceFileUpload.Integration.Contracts.PublishMessage(Of T)
  name.vb: PublishMessage(Of T)
  spec.csharp:
  - uid: AdvanceFileUpload.Integration.Contracts.PublishMessage`1
    name: PublishMessage
    href: AdvanceFileUpload.Integration.Contracts.PublishMessage-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AdvanceFileUpload.Integration.Contracts.PublishMessage`1
    name: PublishMessage
    href: AdvanceFileUpload.Integration.Contracts.PublishMessage-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
